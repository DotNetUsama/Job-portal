@page
@using Enums
@model Areas.Applicants.Pages.IndexModel
@{
    ViewData["Title"] = Model.JobVacancy.Title;
}

<div class="jumbotron jumbotron-fluid py-4 bg-form-background">
    <div class="container">
        <h1 class="display-4">@ViewData["Title"]</h1>
        <span class="@(((JobVacancyStatus) Model.JobVacancy.Status).GetCssClass())">
            @((JobVacancyStatus)Model.JobVacancy.Status)
        </span>
        <p class="lead">@Model.JobVacancy.JobTitle.Title | <i class="fa fa-building"></i> @Model.JobVacancy.CompanyDepartment.City.Name (@Model.JobVacancy.CompanyDepartment.DetailedAddress)</p>
        <div class="d-flex">
            @if (Model.JobVacancy.Status == (int)JobVacancyStatus.Open)
            {
                <form asp-controller="JobVacancies"
                      asp-action="Close"
                      asp-route-id="@Model.JobVacancy.Id"
                      class="d-inline"
                      method="post">
                    <button class="btn btn-danger btn-sm mr-2">Close</button>
                </form>
            }
            <a asp-area="JobVacancies"
               asp-page="Details"
               asp-route-id="@Model.JobVacancy.Id"
               class="btn btn-info btn-sm">Details</a>

            @if (Model.JobVacancy.Status == (int)JobVacancyStatus.Closed
               && Model.JobVacancy.AwaitingApplicants == 0
               && Model.JobVacancy.Applicants.Count != 0)
            {
                <form asp-controller="JobVacancies"
                      asp-action="FinalDecision"
                      asp-route-id="@Model.JobVacancy.Id"
                      class="ml-auto"
                      method="post">
                    <button class="btn btn-success btn-sm">Final decision</button>
                </form>
            }
        </div>
    </div>
</div>

<h2>Applicants</h2>
@if (Model.JobVacancy.Applicants.Count == 0)
{
    <p>No applicants yet</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.JobVacancy.Applicants[0].JobSeeker)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.JobVacancy.Applicants[0].SubmittedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.JobVacancy.Applicants[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.JobVacancy.Applicants)
            {
                <tr>
                    <td>
                        @($"{item.JobSeeker.FirstName} {item.JobSeeker.LastName}")
                    </td>
                    <td>
                        @(item.SubmittedAt.ToString("d"))
                    </td>
                    <td>
                        @(((ApplicantStatus)item.Status).GetDescription())
                    </td>
                    <td>
                        <a asp-controller="Applicants"
                           asp-action="Details"
                           asp-route-id="@item.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}