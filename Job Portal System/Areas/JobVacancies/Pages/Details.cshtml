@page
@using Enums
@model DetailsModel
@{
    ViewData["Title"] = Model.JobVacancy.Title;
}

<div class="row">
    <div class="col-md-6 offset-md-3 col-sm-8 offset-sm-2">
        <div class="progress" style="height: 4px;">
            <div class="progress-bar bg-info" role="progressbar" style="width: 100%"
                 aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <div class="form-container">
            <div class="form-head2">
                <h1 class="form-head-title">@ViewData["Title"]</h1>
                <span class="form-head-details @(((JobVacancyStatus) Model.JobVacancy.Status).GetCssClass())">
                    @((JobVacancyStatus) Model.JobVacancy.Status)
                </span>
            </div>
            <div class="form-body">
                <fieldset id="general-info-partial">
                    <legend><i class="fa fa-question-circle"></i> General information</legend>
                    <dl class="row">
                        <dt class="col-sm-3">
                            Job title:
                        </dt>
                        <dd class="col-sm-9">
                            @Model.JobVacancy.JobTitle.Title
                        </dd>
                        <dt class="col-sm-3">
                            Company:
                        </dt>
                        <dd class="col-sm-9">
                            @Model.JobVacancy.CompanyDepartment.Company.Name
                        </dd>
                        <dt class="col-sm-3">
                            Address:
                        </dt>
                        <dd class="col-sm-9">
                            @Model.JobVacancy.CompanyDepartment.City.Name (@Model.JobVacancy.CompanyDepartment.DetailedAddress)
                        </dd>
                        <dt class="col-sm-3">
                            Published at:
                        </dt>
                        <dd class="col-sm-9">
                            @Model.JobVacancy.PublishedAt
                        </dd>
                        <dt class="col-sm-3">
                            Job types:
                        </dt>
                        <dd class="col-sm-9">
                            @string.Join(" | ", Model.JobVacancy.JobTypes
                                    .Select(jobType => ((JobType) jobType.JobType).GetDescription())
                                    .ToArray())
                        </dd>
                    </dl>
                    @if (!string.IsNullOrEmpty(Model.JobVacancy.Description))
                    {
                    <div class="mt-3">
                        <span class="d-block font-weight-little-bold">Description:</span>
                        <div class="mt-2">
                            @Html.Raw(Model.JobVacancy.Description)
                        </div>
                    </div>
                    }
                </fieldset>
                <hr />
                <fieldset id="educations-partial">
                    <legend><i class="fa fa-graduation-cap"></i> Educations</legend>
                    @if (Model.JobVacancy.EducationQualifications.Count == 0)
                    {
                        <p style="font-family: 'Nanum Gothic', sans-serif;">No education qualifications added to this job vacancy</p>
                    }
                    else
                    {
                        <ul class="list-unstyled">
                            @foreach (var education in Model.JobVacancy.EducationQualifications)
                            {
                                <li class="collapse-container">
                                    <div class="row info-item bg-form-light-main-hover">
                                        <div class="col-md-10">
                                            <span>
                                                Minimum <span class="font-weight-bold">@education.MinimumYears</span> in <span class="font-weight-bold">@education.FieldOfStudy.Title</span>
                                            </span>
                                        </div>
                                        <div class="col-md-2 d-flex">
                                            <button type="button" class="ml-auto btn btn-icon extend">
                                                <i class="fa fa-angle-down"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="item-details collapse-content">
                                        <div class="details-container">
                                            <span class="font-weight-little-bold text-info @(((QualificationType)education.Type).GetCssClass())">[@((QualificationType)education.Type)]</span> Minimum <span class="font-weight-bold">@education.MinimumYears</span> in <span class="font-weight-bold">@education.FieldOfStudy.Title</span> with <span class="font-weight-little-bold">@((EducationDegree)education.Degree)</span> degree
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>

                    }
                </fieldset>
                <hr />
                <fieldset id="work-experiences-partial">
                    <legend><i class="fa fa-briefcase"></i> Work experiences</legend>

                    @if (Model.JobVacancy.WorkExperienceQualifications.Count == 0)
                    {
                        <p style="font-family: 'Nanum Gothic', sans-serif;">No work experience qualifications added to this job vacancy</p>
                    }
                    else
                    {
                        <ul class="list-unstyled">
                            @foreach (var workExperience in Model.JobVacancy.WorkExperienceQualifications)
                            {
                                <li class="show-item collapse-container">
                                    <div class="row info-item bg-form-light-main-hover">
                                        <div class="col-md-10">
                                            <span>
                                                Minimum <span class="font-weight-bold">@workExperience.MinimumYears</span> in <span class="font-weight-bold">@workExperience.JobTitle.Title</span>
                                            </span>
                                        </div>
                                        <div class="col-md-2 d-flex">
                                            <button type="button" class="ml-auto btn btn-icon extend">
                                                <i class="fa fa-angle-down"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="item-details collapse-content">
                                        <div class="details-container">
                                            <span class="font-weight-little-bold text-info @(((QualificationType)workExperience.Type).GetCssClass())">[@((QualificationType)workExperience.Type)]</span> Minimum <span class="font-weight-bold">@workExperience.MinimumYears</span> in <span class="font-weight-bold">@workExperience.JobTitle.Title</span>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                </fieldset>
                @if (Model.JobVacancy.DesiredSkills.Count != 0)
                {
                    <hr />
                    <fieldset id="desired-skills-sub-form">
                        <legend><i class="fa fa-star"></i> Desired Skills</legend>
                        <ul class="list-unstyled">
                            @foreach (var skill in Model.JobVacancy.DesiredSkills)
                            {
                                <li>
                                    <div class="row info-item bg-form-light-main-hover">
                                        <div class="col-md-10">
                                            <span>
                                                <span class="font-weight-little-bold text-info @(((QualificationType)skill.Type).GetCssClass())">[@((QualificationType)skill.Type)]</span> Minimum <span class="font-weight-bold">@skill.MinimumYears</span> years in <span class="font-weight-bold">@skill.Skill.Title</span>
                                            </span>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </fieldset>
                }
                @if (Model.CanSubmit || Model.IsOwner)
                {
                    <hr />
                    if (Model.CanSubmit)
                    {
                        <div class="d-flex">
                            <form method="post" class="ml-auto">
                                <button asp-controller="JobVacancies"
                                        asp-action="Submit"
                                        asp-route-id="@Model.JobVacancy.Id"
                                        class="btn btn-submit">
                                    Submit
                                </button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex">
                            <a asp-area="Applicants"
                               asp-page="Index"
                               asp-route-jobVacancyId="@Model.JobVacancy.Id"
                               class="btn btn-submit">
                                View applicants
                            </a>
                            @if (Model.JobVacancy.Method == (int) JobVacancyMethod.Submission ||
                                 (Model.JobVacancy.Method == (int) JobVacancyMethod.Recommendation &&
                                  Model.JobVacancy.Status != (int) JobVacancyStatus.Open))
                            {
                                <form asp-controller="JobVacancies"
                                      asp-action="Delete"
                                      asp-route-id="@Model.JobVacancy.Id"
                                      class="d-inline"
                                      method="post">
                                    <button class="btn btn-submit ml-2">Delete</button>
                                </form>
                            }
                            @if (Model.CanClose)
                            {
                                <form asp-controller="JobVacancies" 
                                      asp-action="Close" 
                                      asp-route-id="@Model.JobVacancy.Id"
                                      method="post" 
                                      class="ml-auto">
                                    <button class="btn btn-submit">Close</button>
                                </form>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_CollapseScriptsPartial" />
}