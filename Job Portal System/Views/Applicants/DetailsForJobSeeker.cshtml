@model ViewModels.Applicants.ApplicantForJobSeekerFullViewModel
@using Enums

@{
    ViewData["Title"] = Model.JobVacancy.Title;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="main-columns">
    <div id="main-bar" class="fs-body2">
        <div class="grid mb32 gs12 gsx ps-relative">
            <div class="s-avatar s-avatar__lg mr8" style="flex-shrink: 0; background-color: white">
                <a asp-controller="Companies" asp-action="Details" asp-route-id="@Model.JobVacancy.Company.Id">
                    <img alt="@Model.JobVacancy.Company.Name" class="hmx100 wmx100" src="@Model.JobVacancy.Company.Logo">
                </a>
            </div>
            <div class="grid--cell fl1">
                <h1 class="fs-headline1 mb4">
                    <a asp-controller="JobVacancies" asp-action="Details" asp-route-id="@Model.Id" title="@Model.JobVacancy.Title" class="fc-black-900">@Model.JobVacancy.Title</a>
                </h1>
                <div class="fc-black-700 fs-body1">
                    <a class="fc-black-700" asp-controller="Companies" asp-action="Details" asp-route-id="@Model.JobVacancy.Company.Id">@Model.JobVacancy.Company.Name</a>
                    <span class="fc-black-500">
                        <span class="px8">|</span>
                        @(Model.JobVacancy.IsRemote ? Model.JobVacancy.Location : "No office location")
                    </span>
                </div>
                <div class="mt12 fs-body1">
                    <span class="-salary pr16" title="£@Model.JobVacancy.MinSalary - @Model.JobVacancy.MaxSalary (Syrian Pounds)">£@Model.JobVacancy.MinSalary - @Model.JobVacancy.MaxSalary</span>
                    @if (Model.JobVacancy.IsRemote)
                    {
                        <span class="-remote pr16">Remote</span>
                    }
                </div>
            </div>
            <partial name="_ApplicantStatusPartial" model="@Model.Status"/>
        </div>
        <div class="grid by mt16 mb24 py16 bc-black-3">
            <nav class="grid--cell mr-auto">
                <a href="#overview-items" class="s-btn d-inline-block" data-nav-item="Overview">Overview</a>
                <a href="#qualifications-items" class="s-btn d-inline-block" data-nav-item="Company">Qualifications</a>
                <a href="#company-items" class="s-btn d-inline-block" data-nav-item="Company">Company</a>
            </nav>
        </div>
        <div id="overview-items" class="job-details__spaced">
            <section class="mb32">
                <h2 class="fs-subheading mb16">About this job</h2>
                <div class="grid gs16 gsx">
                    <div class="grid--cell6">
                        <div class="mb8">
                            <span>Role: </span>
                            <span class="fw-bold">@Model.JobVacancy.JobTitle</span>
                        </div>
                        <div class="mb8">
                            <span>Job types: </span>
                            @foreach (var jobType in Model.JobVacancy.JobTypes)
                            {
                                <span class="fw-bold px8">@(((JobType)jobType).GetDescription())</span>
                            }
                        </div>
                    </div>

                    <div class="grid--cell6">
                        <div class="mb8">
                            <span>Company size: </span>
                            @if (Model.JobVacancy.Company.EmployeesNum.HasValue)
                            {
                                <span class="fw-bold">@Model.JobVacancy.Company.EmployeesNum.Value people</span>
                            }
                            else
                            {
                                <span class="fw-bold">Unknown</span>
                            }
                        </div>
                        <div class="mb8">
                            <span>Company type: </span>
                            <span class="fw-bold tt-capitalize">@Model.JobVacancy.Company.Type</span>
                        </div>
                    </div>
                </div>
            </section>
            <section class="mb32">
                <h2 class="fs-subheading mb16">Job description</h2>
                <div>
                    <div class="marker">
                        <div class="content d-none">@Model.JobVacancy.Description</div>
                        <div class="view"></div>
                    </div>
                </div>
            </section>
            @await Component.InvokeAsync("JobVacancyActions", new { jobVacancyId = Model.Id, user = User })
        </div>
        <div id="qualifications-items" class="job-details__spaced">
            <section class="mb32">
                <h2 class="fs-subheading mb16">Qualifications</h2>
                @if (Model.JobVacancy.DesiredSkills.Any())
                {
                    <strong>Skills:</strong>
                    <partial name="_QualificationsGroupPartial" model="@Model.JobVacancy.DesiredSkills" />
                }
                @if (Model.JobVacancy.WorkExperienceQualifications.Any())
                {
                    <strong>Experiences:</strong>
                    <partial name="_QualificationsGroupPartial" model="@Model.JobVacancy.WorkExperienceQualifications" />
                }
                @if (Model.JobVacancy.EducationQualifications.Any())
                {
                    <strong>Educations:</strong>
                    <partial name="_QualificationsGroupPartial" model="@Model.JobVacancy.EducationQualifications" />
                }
            </section>
        </div>
    </div>
    <div class="sidebar">
        @await Component.InvokeAsync("ApplicantActions", new {applicantId = Model.Id, user = User})
    </div>
</div>

@section Scripts {
    <partial name="_MarkerScriptsPartial" />
}
